## Code Overview

The Arduino code controls the movement of the robot's legs by rotating the hip and knee servos to predefined angles. The movement cycle consists of lifting the leg, swinging it forward, lowering it, and shifting the weight.

### Main Functions

- `setup()`: Initializes the servo motors and sets their initial positions to 90 degrees.
- `loop()`: Contains the main walking cycle, which includes lifting, swinging forward, lowering the leg, and shifting the weight.

### Helper Functions

- `incrementallyRotate(Servo servo, int fromAngle, int toAngle)`: Gradually rotates the servo from one angle to another.
- `decrementAngle(Servo servo, int fromAngle, int toAngle)`: Decreases the servo angle gradually.
- `incrementAngle(Servo servo, int fromAngle, int toAngle)`: Increases the servo angle gradually.
- `maintainAngle(Servo servo, int angle)`: Keeps the servo at a specified angle.

## Parameters

- `stepLength`: The length of each step in degrees (default: 30).
- `footLiftHeight`: The height of the foot lift in degrees (default: 60).
- `movementSpeed`: The speed of movement in milliseconds (default: 50).

## Usage

1. **Power the Arduino and Servos:**
   - Connect the Arduino to your computer or an appropriate power source.
   - Ensure that the servos have a sufficient power supply.

2. **Monitor the Movement:**
   - Once the code is uploaded and the Arduino is powered, the robot will start executing the walking cycle.
   - Observe the movement of the legs and make any necessary adjustments to the parameters or servo connections.

## Adjustments and Fine-Tuning

- Modify the `stepLength`, `footLiftHeight`, and `movementSpeed` parameters in the code to achieve the desired walking motion.
- Adjust the servo connections if the movement is not as expected.

## Troubleshooting

- Ensure all servo connections are secure and correct.
- Check that the power supply is adequate for the number of servos used.
- Verify that the Servo library is properly installed in the Arduino IDE.

## License

This project is open-source and licensed under the MIT License.

## Code

### `robot_leg_movement.ino`

```cpp
#include <Servo.h>

Servo hipServo1, hipServo2, kneeServo1, kneeServo2;

int stepLength = 30;      // Step length in degrees
int footLiftHeight = 60;  // Foot lift height in degrees
int movementSpeed = 50;   // Movement speed in milliseconds

void setup() {
  // Attach the servos
  hipServo1.attach(9);   // Attach hip servo 1 to pin 9
  hipServo2.attach(10);  // Attach hip servo 2 to pin 10
  kneeServo1.attach(11); // Attach knee servo 1 to pin 11
  kneeServo2.attach(12); // Attach knee servo 2 to pin 12

  // Set initial positions to 90 degrees
  setInitialPositions();
}

void setInitialPositions() {
  hipServo1.write(90);
  hipServo2.write(90);
  kneeServo1.write(90);
  kneeServo2.write(90);
  delay(1000);  // Delay for 1 second to stabilize the initial positions
}

void loop() {
  // Lift the leg
  incrementallyRotate(hipServo1, 90, 120);
  decrementAngle(kneeServo1, 90, 60);
  delay(movementSpeed);

  // Swing the leg forward
  incrementallyRotate(hipServo1, 120, 90);
  incrementAngle(kneeServo1, 60, 90);
  delay(movementSpeed);

  // Lower the leg
  incrementAngle(kneeServo1, 90, 120);
  maintainAngle(hipServo1, 90);

  // Shift weight
  incrementallyRotate(hipServo1, 90, 80);
  
  // Repeat for the opposite leg
  incrementallyRotate(hipServo2, 90, 120);
  decrementAngle(kneeServo2, 90, 60);
  delay(movementSpeed);

  incrementallyRotate(hipServo2, 120, 90);
  incrementAngle(kneeServo2, 60, 90);
  delay(movementSpeed);

  incrementAngle(kneeServo2, 90, 120);
  maintainAngle(hipServo2, 90);

  incrementallyRotate(hipServo2, 90, 80);
}

void incrementallyRotate(Servo servo, int fromAngle, int toAngle) {
  if (fromAngle < toAngle) {
    for (int angle = fromAngle; angle <= toAngle; angle++) {
      servo.write(angle);
      delay(movementSpeed);
    }
  } else {
    for (int angle = fromAngle; angle >= toAngle; angle--) {
      servo.write(angle);
      delay(movementSpeed);
    }
  }
}

void decrementAngle(Servo servo, int fromAngle, int toAngle) {
  for (int angle = fromAngle; angle >= toAngle; angle--) {
    servo.write(angle);
    delay(movementSpeed);
  }
}

void incrementAngle(Servo servo, int fromAngle, int toAngle) {
  for (int angle = fromAngle; angle <= toAngle; angle++) {
    servo.write(angle);
    delay(movementSpeed);
  }
}

void maintainAngle(Servo servo, int angle) {
  servo.write(angle);
}
